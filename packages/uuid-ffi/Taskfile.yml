version: "3"

tasks:
  install:
    cmds:
      - pixi global install rattler-build # magic global install rattler-build

  init:pixi:
    cmds:
      - pixi init .

  # ref: https://pixi.sh/dev/tutorials/rust/#add-rust-dependencies
  setup:pixi:
    cmds:
      - pixi add rust
      - pixi task add build "cargo build"

  pkg:
    cmds:
      - echo "pixi cli:"
      - pixi {{.CLI_ARGS}}

  pixi:build:
    aliases: [ "pb" ]
    cmds:
      - pixi run cargo build

  run:v4:
    aliases: [ "r4" ]
    cmds:
      - RUST_LOG=info cargo run --bin uuid_v4
    dir: ffigen/

  run:v7:
    aliases: [ "r7" ]
    cmds:
      - RUST_LOG=info cargo run --bin uuid_v7
    dir: ffigen/

  check:
    cmds:
      - RUSTFLAGS="-Z sanitizer=leak" cargo +nightly build

  test:
    aliases: [ "t" ]
    cmds:
      - RUST_LOG=info cargo test --lib

  build:
    aliases: [ "b" ]
    cmds:
      - pixi run build
#      - rattler-build build --recipe recipes/recipe.yaml -c https://conda.modular.com/max -c conda-forge --skip-existing=all
      - open output/

  #
  # ref: https://taskfile.dev/usage/#looping-over-variables
  #
  publish:
    aliases: [ "up", "pub", "pub:auto" ]
    vars:
      UP_PKGS:
        sh: find . -name "*.conda" -type f
    cmds:
      - echo {{ .UP_PKGS }}
      - for: { var: UP_PKGS }
        cmd:
          |
          magic run rattler-build upload prefix -c "better-ffi" \
            --api-key=$PREFIX_DEV_API_KEY \
            {{.ITEM}}
      - open https://prefix.dev/channels/better-ffi
    dir: output/

  release:
    aliases: [ "rel" ]
    cmds:
      - RUST_BACKTRACE=full RUST_LOG=info cargo build --release # CARGO_PROFILE_RELEASE_BUILD_OVERRIDE_DEBUG=true
    dir: ffigen/

  clean:
    aliases: [ "cl", 'del' ]
    cmds:
      - rm -rf output/
#      - cargo clean